
------------------------------------BUG Report 1-----------------------------------------
Bug ID: 10001
Test Card: Smithy
Version: Smithy V. Assignment 4
Description: Smithy is not discarding when played
Test Case Information:

TEST 9: Deck = 3, Hand = 2, Discard = 1
hand count = 4, expected = 4 ---- SUCCESS
deck count = 0, expected = 0 ---- SUCCESS
discard count = 0, expected = 2 -- FAILED
Smithy not in hand ---- SUCCESS

Applicable Test Code:
        handpos = smithyIndex; // Set the hand position for the smithy card.
        
        for (i = 0; i < handCount; i++)
        {
            if(i == smithyIndex)
            {
                testG.hand[thisPlayer][i] = smithy;
            }
            else
            {
                testG.hand[thisPlayer][i] = testCards[rand() % (nTestCards - 1)];
            }
        }
        
        for (i = 0; i < deckCount; i++)
        {
            testG.deck[thisPlayer][i] = testCards[rand() % nTestCards];
        }
        
        for (i = 0; i < discardCount; i++)
        {
            testG.discard[thisPlayer][i] = testCards[rand() % nTestCards];
        }
        
        // Now determine what the correct output should be
        discardResult = discardCount + 1; //smithy
        deckResult = deckCount;
        handResult = handCount - 1; //smithy
        bothCoins = 0;
        
        if(deckCount < 3)
        {
            if(deckCount + discardCount < 3)
            {
                deckResult = 0;
                discardResult = 1;
                handResult += deckCount + discardCount;
            }
            else
            {
                deckResult = discardCount -(3 - deckCount);
                discardResult -= discardCount;
                handResult += 3;
            }
        }
        
        else
        {
            deckResult -= 3;
            handResult += 3;
        }
        
        // ----------- TEST Description --------------
        printf("\nTEST %d: Deck = %d, Hand = %d, Discard = %d\n", count, deckCount, handCount, discardCount);
        
        cardEffect(smithy, choice1, choice2, choice3, &testG, handpos, &bonus);
        
        //Test if smithy is still in hand
        isInHand = 0;
        for (i = 0; i < testG.handCount[thisPlayer]; i++)
        {
            if(testG.hand[thisPlayer][i] == adventurer)
            {
                isInHand = 1;
            }
        }
        
        printf("hand count = %d, expected = %d", testG.handCount[thisPlayer], handResult);
        assertTotal += customAssert(testG.handCount[thisPlayer] == handResult);
        
        printf("deck count = %d, expected = %d", testG.deckCount[thisPlayer], deckResult);
        assertTotal += customAssert(testG.deckCount[thisPlayer] == deckResult);
        
        printf("discard count = %d, expected = %d", testG.discardCount[thisPlayer],discardResult);
        assertTotal += customAssert(testG.discardCount[thisPlayer] == discardResult);
        
        printf("Smithy not in hand");
        assertTotal += customAssert(!isInHand);

----------------------------------END OF BUG REPORT--------------------------------------



------------------------------------BUG Report 2-----------------------------------------
Bug ID: 10002
Test Card: Smithy
Version: Smithy V. Assignment 4
Description: Smithy Is drawing too many cards from deck
Test Case Information:

TEST 6: Deck = 9, Hand = 1, Discard = 3
hand count = 3, expected = 3 ---- SUCCESS
deck count = 5, expected = 6 -- FAILED
discard count = 3, expected = 4 -- FAILED
Smithy not in hand ---- SUCCESS

Applicable Test Code:
        handpos = smithyIndex; // Set the hand position for the smithy card.
        
        for (i = 0; i < handCount; i++)
        {
            if(i == smithyIndex)
            {
                testG.hand[thisPlayer][i] = smithy;
            }
            else
            {
                testG.hand[thisPlayer][i] = testCards[rand() % (nTestCards - 1)];
            }
        }
        
        for (i = 0; i < deckCount; i++)
        {
            testG.deck[thisPlayer][i] = testCards[rand() % nTestCards];
        }
        
        for (i = 0; i < discardCount; i++)
        {
            testG.discard[thisPlayer][i] = testCards[rand() % nTestCards];
        }
        
        // Now determine what the correct output should be
        discardResult = discardCount + 1; //smithy
        deckResult = deckCount;
        handResult = handCount - 1; //smithy
        bothCoins = 0;
        
        if(deckCount < 3)
        {
            if(deckCount + discardCount < 3)
            {
                deckResult = 0;
                discardResult = 1;
                handResult += deckCount + discardCount;
            }
            else
            {
                deckResult = discardCount -(3 - deckCount);
                discardResult -= discardCount;
                handResult += 3;
            }
        }
        
        else
        {
            deckResult -= 3;
            handResult += 3;
        }
        
        // ----------- TEST Description --------------
        printf("\nTEST %d: Deck = %d, Hand = %d, Discard = %d\n", count, deckCount, handCount, discardCount);
        
        cardEffect(smithy, choice1, choice2, choice3, &testG, handpos, &bonus);
        
        //Test if smithy is still in hand
        isInHand = 0;
        for (i = 0; i < testG.handCount[thisPlayer]; i++)
        {
            if(testG.hand[thisPlayer][i] == adventurer)
            {
                isInHand = 1;
            }
        }
        
        printf("hand count = %d, expected = %d", testG.handCount[thisPlayer], handResult);
        assertTotal += customAssert(testG.handCount[thisPlayer] == handResult);
        
        printf("deck count = %d, expected = %d", testG.deckCount[thisPlayer], deckResult);
        assertTotal += customAssert(testG.deckCount[thisPlayer] == deckResult);
        
        printf("discard count = %d, expected = %d", testG.discardCount[thisPlayer],discardResult);
        assertTotal += customAssert(testG.discardCount[thisPlayer] == discardResult);
        
        printf("Smithy not in hand");
        assertTotal += customAssert(!isInHand);

------------------------------------END OF BUG REPORT ------------------------------------


